# .github/workflows/build-openssl.yml
name: OpenSSL 3.5 Build
on: [push, pull_request]

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

jobs:
  build-windows:
    name: Windows Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install NASM & Perl
        shell: cmd
        run: |
          choco install nasm -y --no-progress
          choco install strawberryperl -y --no-progress
          refreshenv

      - name: Debug Environment
        shell: cmd
        run: |
          echo === ENV ===
          set
          echo === PATH ===
          echo %PATH%
          echo === Locate NASM ===
          where nasm || echo NASM not found
          nasm -v || echo NASM version check failed

      - name: Fetch & Unpack OpenSSL
        shell: cmd
        run: |
          curl -L -o openssl.tar.gz https://github.com/openssl/openssl/archive/refs/tags/openssl-3.5.0.tar.gz
          tar -xzf openssl.tar.gz
          ren openssl-openssl-3.5.0 openssl-src

      - name: Configure & Build
        shell: cmd
        run: |
          cd openssl-src
          perl Configure VC-WIN64A --prefix=%CD%\install > configure-win.log 2>&1
          echo Configure exit code: %ERRORLEVEL%
          nmake -nologo -noprogress > make-win.log 2>&1
          echo Make exit code: %ERRORLEVEL%

      - uses: actions/upload-artifact@v4
        with:
          name: windows-logs
          path: |
            openssl-src\configure-win.log
            openssl-src\make-win.log

  build-linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential nasm perl
          echo === PATH ===
          echo $PATH
          which nasm || echo nasm not found
          nasm -v || true

      - name: Debug Environment
        run: |
          echo === ENV ===
          printenv
          echo === PATH ===
          echo $PATH

      - name: Fetch & Unpack OpenSSL
        run: |
          curl -L -o openssl.tar.gz https://github.com/openssl/openssl/archive/refs/tags/openssl-3.5.0.tar.gz
          tar -xzf openssl.tar.gz
          mv openssl-openssl-3.5.0 openssl-src

      - name: Configure & Build
        run: |
          cd openssl-src
          ./Configure linux-x86_64 --prefix=$PWD/install > configure-linux.log 2>&1
          echo Configure exit code: ${PIPESTATUS[0]}
          make -j$(nproc) > make-linux.log 2>&1
          echo Make exit code: ${PIPESTATUS[0]}

      - uses: actions/upload-artifact@v4
        with:
          name: linux-logs
          path: |
            openssl-src/configure-linux.log
            openssl-src/make-linux.log
